trigger:
  branches:
    include:
    - development
pool:
  vmImage: ubuntu-latest
stages:
- stage: Build
  displayName: Image Build
  jobs:
  - job: Build
    displayName: Build and Push the image to ACR
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'cai-yaml-test'
        repository: 'test'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
- stage: Test
  displayName: trivy test
  dependsOn:
  - Build
  condition: succeeded()
  jobs:
  - job: test_with_trivy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'cai-yaml-test'
        command: 'login'
    - task: trivy@1
      inputs:
        version: 'latest'
        loginDockerConfig: true
        image: 'conversationalai.azurecr.io/test:$(Build.BuildId)'
        severities: 'CRITICAL,HIGH'
        exitCode: '0'
    - task: SonarQubePrepare@6
      inputs:
        SonarQube: 'YourSonarqubeServerEndpoint'
        scannerMode: 'MSBuild'
        projectKey: 'YourProjectKey'

# Dotnet build task
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: 'Techforceai/Infra-Test'
        arguments: 'any'
      displayName: 'dotnet build'

# Run Code Analysis task
    - task: SonarQubeAnalyze@6
      inputs:
        jdkversion: 'JAVA_HOME_17_X64'

# Publish Quality Gate Result task
    - task: SonarQubePublish@6
      inputs:
        pollingTimeoutSec: '300'