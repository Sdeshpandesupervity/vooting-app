trigger:
  branches:
    include:
    - development
pool:
  vmImage: ubuntu-latest
stages:
- stage: Build
  displayName: Image Build
  jobs:
  - job: Build
    displayName: Build and Push the image to ACR
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'docker registry'
        repository: 'sumedh1991'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
- stage: Test
  displayName: trivy test
  dependsOn:
  - Build
  condition: succeeded()
  jobs:
  - job: test_with_trivy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'cai-yaml-test'
        command: 'login'
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          #Downloading and installing trivy

          wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
          sudo dpkg -i trivy_0.18.3_Linux-64bit.deb

          git clone https://github.com/aquasecurity/trivy.git

          cd trivy

          trivy image --severity HIGH,CRITICAL --format template --template "contrib/junit.tpl" -o high-critical-report.xml "conversationalai.azurecr.io/test:$(Build.BuildId)"
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/high-critical-report.xml'
        testRunTitle: 'test results'
- stage: Deploy
  displayName: Deploy Image to K8's
  dependsOn:
  - Test
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy Job
    pool:
      vmImage: 'ubuntu-latest'
    environment:
      name: 'Production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Kubernetes@1
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceEndpoint: 'ext-dev-cluster'
              namespace: 'superqa'
              command: 'set'
              arguments: 'image deployment svai-img-processor-test svai-img-processor-test=conversationalai.azurecr.io/test:$(Build.BuildId)'
              secretType: 'dockerRegistry'
              containerRegistryType: 'Azure Container Registry'


        

