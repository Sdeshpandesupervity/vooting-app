trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  SONARQUBE_PROJECT_KEY: 'test'
  SONARQUBE_PROJECT_NAME: 'test'
  SONARQUBE_HOST_URL: 'http://localhost:9000'
  SONARQUBE_LOGIN: $(SONARQUBE_TOKEN) # Set this as a secret variable in Azure DevOps

jobs:
- job: 'BuildAndAnalyze'
  displayName: 'Build Docker Image and Run Security and Code Analysis'

  steps:
  - checkout: self

  - task: Docker@2
    inputs:
      containerRegistry: 'docker registry'
      repository: 'your-docker-repo/your-image'
      command: 'buildAndPush'
      Dockerfile: 'Dockerfile'
      tags: 'latest'

  - script: |
      echo "Running Trivy scan on the built Docker image..."
      docker run --rm \
        -v /var/run/docker.sock:/var/run/docker.sock \
        aquasec/trivy:latest image your-docker-repo/your-image:latest
    displayName: 'Run Trivy Scan on Docker Image'

  - script: |
      echo "Running OWASP Dependency-Check on the source code..."
      docker run --rm \
        -v $(System.DefaultWorkingDirectory):/src \
        -v $(System.DefaultWorkingDirectory)/dependency-check-report:/report \
        owasp/dependency-check \
        --scan /src --format ALL --out /report
    displayName: 'Run OWASP Dependency-Check'

  - script: |
      echo "Starting SonarQube..."
      docker run -d --name sonarqube \
        -e SONAR_JDBC_URL="jdbc:postgresql://sonarqube-postgres:5432/sonarqube" \
        -e SONAR_JDBC_USERNAME=sonar \
        -e SONAR_JDBC_PASSWORD=sonar \
        -p 9000:9000 sonarqube:community

      echo "Starting PostgreSQL..."
      docker run -d --name sonarqube-postgres \
        -e POSTGRES_USER=sonar \
        -e POSTGRES_PASSWORD=sonar \
        -e POSTGRES_DB=sonarqube postgres:13

      echo "Waiting for SonarQube to be ready..."
      until curl -s $(SONARQUBE_HOST_URL)/api/system/health | grep -q "GREEN"; do
        sleep 10
        echo "Waiting for SonarQube..."
      done
    displayName: 'Start SonarQube and PostgreSQL'

  - script: |
      echo "Running SonarQube Scanner..."
      docker run --rm \
        -e SONAR_HOST_URL=$(SONARQUBE_HOST_URL) \
        -e SONAR_LOGIN=$(SONARQUBE_LOGIN) \
        -v $(System.DefaultWorkingDirectory):/src \
        sonarsource/sonar-scanner-cli \
        -Dsonar.projectKey=$(SONARQUBE_PROJECT_KEY) \
        -Dsonar.projectName=$(SONARQUBE_PROJECT_NAME) \
        -Dsonar.sources=/src
    displayName: 'Run SonarQube Analysis'

  - script: |
      echo "Displaying SonarQube logs..."
      docker logs sonarqube
    displayName: 'Show SonarQube Logs'

  - script: |
      echo "Cleaning up Docker containers..."
      docker stop sonarqube sonarqube-postgres
      docker rm sonarqube sonarqube-postgres
    displayName: 'Clean Up'
